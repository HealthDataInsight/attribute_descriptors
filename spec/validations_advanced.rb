require_relative '../metadata'

require 'rspec/core'
require 'test/unit'  # Needed for assertion methods
require 'stringio'
require 'yaml'
require 'awesome_print'

#
# EXAMPLE 1
# NOTICE: \A..\z denote the start and end of the string. ^..$ should not be used
#         for security reasons.
#
metadata = '''
Favorite vowels:
  programmatic_name: fav_vowels
  valid_num_values: 2
  valid_values:
    - a
    - e
    - i
    - o
    - u
'
metafile = Tempfile.new('')
metafile.write(metadata)
metafile.close



describe 'model with attribute favorite_vowers' do
  include Test::Unit::Assertions
  METADATA = Metadata.load_file(metafile.path)
  METADATA_PATH  = metafile.path
  class MyModel < Metadata::AutogeneratedModel
    generated_from METADATA_PATH
  end

  # it "limits valid values based on metadata" do
  #   m = MyModel.new({'fav_vowels' => 'e'})
  #   assert m.valid?
  #   m = MyModel.new({'fav_vowels' => 'g'})
  #   assert !m.valid?
  # end

  it "invalidate an attribute if not exact numbers of values are given" do
    m = MyModel.new({'fav_vowels' => ['a']})
    assert !m.valid?
    m = MyModel.new({'fav_vowels' => ['a', 'e']})
    assert m.valid?
    m = MyModel.new({'fav_vowels' => ['a', 'e', 'i']})
    assert !m.valid?
  end

  # CURRENTLY ONLY WORKING WITH NON-ARRAY
  it "invalidate an attribute if it's not inside the permitted window of values" do
    m = MyModel.new({'fav_vowels' => 'g'})
    assert !m.valid?
  end

end
